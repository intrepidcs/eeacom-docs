"use strict";(self.webpackChunkeeacom_docs=self.webpackChunkeeacom_docs||[]).push([[547],{1117:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var e=n(4848),i=n(8453);const s={title:"Configuring Data Constraints in EEA COM - AUTOSAR Data Constraints Setup",description:"Configure data constraints in EEA COM for AUTOSAR systems. Define physical and internal constraints for data types, including upper and lower limits and validity parameters. Efficiently manage data integrity and system constraints to optimize ECU communication and performance.",keywords:["Data Constraints","EEA COM","AUTOSAR","Physical Constraints","Internal Constraints","Data Type Limits","ECU Data Management"],sidebar_position:1,sidebar_label:"Data Constraints"},r="7.1 Data Constraints",o={id:"data-types/data-constraints",title:"Configuring Data Constraints in EEA COM - AUTOSAR Data Constraints Setup",description:"Configure data constraints in EEA COM for AUTOSAR systems. Define physical and internal constraints for data types, including upper and lower limits and validity parameters. Efficiently manage data integrity and system constraints to optimize ECU communication and performance.",source:"@site/docs/data-types/data-constraints.md",sourceDirName:"data-types",slug:"/data-types/data-constraints",permalink:"/data-types/data-constraints",draft:!1,unlisted:!1,editUrl:"https://github.com/intrepidcs/eeacom-docs/blob/main/docs/data-types/data-constraints.md",tags:[],version:"current",lastUpdatedAt:1728649695e3,sidebarPosition:1,frontMatter:{title:"Configuring Data Constraints in EEA COM - AUTOSAR Data Constraints Setup",description:"Configure data constraints in EEA COM for AUTOSAR systems. Define physical and internal constraints for data types, including upper and lower limits and validity parameters. Efficiently manage data integrity and system constraints to optimize ECU communication and performance.",keywords:["Data Constraints","EEA COM","AUTOSAR","Physical Constraints","Internal Constraints","Data Type Limits","ECU Data Management"],sidebar_position:1,sidebar_label:"Data Constraints"},sidebar:"tutorialSidebar",previous:{title:"Data Types",permalink:"/data-types/"},next:{title:"Application Data Type (Array)",permalink:"/data-types/application-data-type"}},d={},c=[];function p(t){const a={h1:"h1",header:"header",img:"img",li:"li",ol:"ol",p:"p",...(0,i.R)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.header,{children:(0,e.jsx)(a.h1,{id:"71-data-constraints",children:"7.1 Data Constraints"})}),"\n",(0,e.jsx)(a.p,{children:"A Data Constraint is used to decorate other data types with one or more constraints. Use the dataConstraintRef property of the Application DataType or Implementation DataType classes to access the reference string."}),"\n",(0,e.jsxs)(a.ol,{children:["\n",(0,e.jsxs)(a.li,{children:["\n",(0,e.jsx)(a.p,{children:"Add Data Constraints \u2192 Short Name \u2192 In Physical Constraint  \u2192 Lower and Upper Limit \u2192 Lower and Upper Limit Interval\u2192 Validity(NOTAVAILABLE, NOT DEFINED, NOT VALID, VALID)\u2192 Save Physical Constraints."}),"\n"]}),"\n",(0,e.jsxs)(a.li,{children:["\n",(0,e.jsx)(a.p,{children:"Add Internal Constraints \u2192 Short Name  \u2192 Lower and Upper Limit\u2192 Lower and Upper Limit Interval \u2192 Validity(NOTAVAILABLE, NOT DEFINED, NOT VALID, VALID) \u2192 Save Internal Constraints."}),"\n"]}),"\n"]}),"\n",(0,e.jsx)("div",{class:"text--center",children:(0,e.jsx)("figure",{children:(0,e.jsxs)(a.p,{children:[(0,e.jsx)(a.img,{alt:"Data Constraints",src:n(9111).A+"",title:"- Data Constraints",width:"1449",height:"352"}),"\r\n",(0,e.jsx)("figcaption",{children:"Fig. Data Constraints"})]})})})]})}function l(t={}){const{wrapper:a}={...(0,i.R)(),...t.components};return a?(0,e.jsx)(a,{...t,children:(0,e.jsx)(p,{...t})}):p(t)}},9111:(t,a,n)=>{n.d(a,{A:()=>e});const e=n.p+"assets/images/image2-e65e8b560f18d94abc30df8dd7228adc.webp"},8453:(t,a,n)=>{n.d(a,{R:()=>r,x:()=>o});var e=n(6540);const i={},s=e.createContext(i);function r(t){const a=e.useContext(s);return e.useMemo((function(){return"function"==typeof t?t(a):{...a,...t}}),[a,t])}function o(t){let a;return a=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),e.createElement(s.Provider,{value:a},t.children)}}}]);