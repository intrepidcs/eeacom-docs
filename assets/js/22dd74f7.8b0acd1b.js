"use strict";(self.webpackChunkeeacom_docs=self.webpackChunkeeacom_docs||[]).push([[1567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/","docId":"getting-started","unlisted":false},{"type":"link","label":"Introduction","href":"/intro","docId":"intro","unlisted":false},{"type":"category","label":"Clusters","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CAN/CAN FD Cluster","href":"/clusters/can-cluster","docId":"clusters/can-cluster","unlisted":false},{"type":"link","label":"Ethernet Cluster","href":"/clusters/ethernet-cluster","docId":"clusters/ethernet-cluster","unlisted":false},{"type":"link","label":"LIN Cluster","href":"/clusters/lin-cluster","docId":"clusters/lin-cluster","unlisted":false},{"type":"link","label":"FlexRay Cluster","href":"/clusters/flexray-cluster","docId":"clusters/flexray-cluster","unlisted":false},{"type":"link","label":"J1939 Cluster","href":"/clusters/j1939-cluster","docId":"clusters/j1939-cluster","unlisted":false}],"href":"/clusters/"},{"type":"link","label":"ECU","href":"/ecu","docId":"ecu","unlisted":false},{"type":"category","label":"Frames","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CAN Frames","href":"/frames/can-frames","docId":"frames/can-frames","unlisted":false},{"type":"link","label":"LIN Sporadic Frames","href":"/frames/lin-sporadic-frames","docId":"frames/lin-sporadic-frames","unlisted":false},{"type":"link","label":"LIN Unconditional Frames","href":"/frames/lin-unconditional-frames","docId":"frames/lin-unconditional-frames","unlisted":false},{"type":"link","label":"LIN Event Triggered Frames","href":"/frames/lin-event-triggered-frames","docId":"frames/lin-event-triggered-frames","unlisted":false},{"type":"link","label":"FlexRay Frames","href":"/frames/flexray-frames","docId":"frames/flexray-frames","unlisted":false},{"type":"link","label":"Ethernet Frames","href":"/frames/ethernet-frames","docId":"frames/ethernet-frames","unlisted":false}],"href":"/frames/"},{"type":"category","label":"PDUs (Protocol Data Units)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Signal I PDUs","href":"/pdus/signal-pdus","docId":"pdus/signal-pdus","unlisted":false},{"type":"link","label":"DCM I PDUs","href":"/pdus/dcm-pdus","docId":"pdus/dcm-pdus","unlisted":false},{"type":"link","label":"Container I PDUs","href":"/pdus/container-pdus","docId":"pdus/container-pdus","unlisted":false},{"type":"link","label":"General Purpose PDUs","href":"/pdus/general-purpose-pdus","docId":"pdus/general-purpose-pdus","unlisted":false},{"type":"link","label":"J1939 DCM I PDUs","href":"/pdus/j1939-dcm-pdus","docId":"pdus/j1939-dcm-pdus","unlisted":false},{"type":"link","label":"Multiplexed I PDUs","href":"/pdus/multiplexed-pdus","docId":"pdus/multiplexed-pdus","unlisted":false},{"type":"link","label":"NM PDUs","href":"/pdus/nm-pdus","docId":"pdus/nm-pdus","unlisted":false},{"type":"link","label":"N PDUs","href":"/pdus/n-pdus","docId":"pdus/n-pdus","unlisted":false},{"type":"link","label":"Secured I PDUs","href":"/pdus/secured-pdus","docId":"pdus/secured-pdus","unlisted":false},{"type":"link","label":"User Defined PDUs","href":"/pdus/user-defined-pdus","docId":"pdus/user-defined-pdus","unlisted":false},{"type":"link","label":"XCP PDUs","href":"/pdus/xcp-pdus","docId":"pdus/xcp-pdus","unlisted":false},{"type":"link","label":"Secure Communication Props Set","href":"/pdus/secure-communication-props-set","docId":"pdus/secure-communication-props-set","unlisted":false}],"href":"/pdus/"},{"type":"category","label":"Signals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"I Signals","href":"/signal/signals","docId":"signal/signals","unlisted":false},{"type":"link","label":"I  Signals Group","href":"/signal/signals-group","docId":"signal/signals-group","unlisted":false}],"href":"/signal/"},{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Constraints","href":"/data-types/data-constraints","docId":"data-types/data-constraints","unlisted":false},{"type":"link","label":"Application Data Type (Array)","href":"/data-types/application-data-type","docId":"data-types/application-data-type","unlisted":false},{"type":"link","label":"Compute Method","href":"/data-types/compute-method","docId":"data-types/compute-method","unlisted":false},{"type":"link","label":"Base Type","href":"/data-types/base-type","docId":"data-types/base-type","unlisted":false},{"type":"link","label":"Implementation Data Type","href":"/data-types/implementation-data-types","docId":"data-types/implementation-data-types","unlisted":false},{"type":"link","label":"Application Data Type (Basic)","href":"/data-types/application-data-type-basic","docId":"data-types/application-data-type-basic","unlisted":false},{"type":"link","label":"Application Data Type (Structure)","href":"/data-types/application-data-type-structure","docId":"data-types/application-data-type-structure","unlisted":false}],"href":"/data-types/"},{"type":"link","label":"Methods and Events","href":"/methods-and-events","docId":"methods-and-events","unlisted":false},{"type":"category","label":"Software Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Transformation Set","href":"/software-components/data-transformation-set","docId":"software-components/data-transformation-set","unlisted":false},{"type":"link","label":"Application SW Component Type","href":"/software-components/application-sw-component-type","docId":"software-components/application-sw-component-type","unlisted":false},{"type":"link","label":"Composition SW Component Type","href":"/software-components/composition-sw-component-type","docId":"software-components/composition-sw-component-type","unlisted":false},{"type":"link","label":"System","href":"/software-components/system","docId":"software-components/system","unlisted":false}],"href":"/software-components/"},{"type":"link","label":"Switches","href":"/switches","docId":"switches","unlisted":false},{"type":"link","label":"Gateway","href":"/gateway","docId":"gateway","unlisted":false}]},"docs":{"clusters/can-cluster":{"id":"clusters/can-cluster","title":"CAN/CAN FD Cluster Management: ECU Connectors & Frame Triggering","description":"Learn how to manage CAN/CAN FD Cluster information in AUTOSAR ARXML files using EEA COM. Add, edit, and delete clusters, configure ECU connectors, set frame triggering, and manage CAN frame identifiers with ease.","sidebar":"tutorialSidebar"},"clusters/clusters":{"id":"clusters/clusters","title":"EEEA COM Expert: Managing CAN, Ethernet, LIN, FlexRay, J1939 Clusters","description":"Explore EEA COM Expert\'s cluster management for CAN, Ethernet, LIN, FlexRay, and J1939. Ideal for automotive engineers designing AUTOSAR communication systems.","sidebar":"tutorialSidebar"},"clusters/ethernet-cluster":{"id":"clusters/ethernet-cluster","title":"Ethernet Cluster Configuration: VLANs, MAC Multicast, SOME/IP in AUTOSAR","description":"Configure Ethernet clusters in AUTOSAR ARXML with EEA COM. Manage MAC Multicast, VLANs, socket connections, SOME/IP services, ECUs, and PDUs for optimal network performance.","sidebar":"tutorialSidebar"},"clusters/flexray-cluster":{"id":"clusters/flexray-cluster","title":"FlexRay Cluster Configuration: Channels, Frame Triggering, & ECU Connectors","description":"Learn how to configure FlexRay Clusters in AUTOSAR ARXML files using EEA COM. Define FlexRay channels, manage frame triggering, set ECU connectors, and configure communication cycles for efficient FlexRay communication.","sidebar":"tutorialSidebar"},"clusters/j1939-cluster":{"id":"clusters/j1939-cluster","title":"J1939 Cluster Configuration: ECU Connectors & Frame Triggering in AUTOSAR","description":"Configure J1939 Clusters in AUTOSAR ARXML files with EEA COM. Set up ECU connectors, manage CAN frame triggering, and define CAN FD support. Customize key settings like baudrate, addressing mode, and PNC gateway type for optimal heavy-duty vehicle communication.","sidebar":"tutorialSidebar"},"clusters/lin-cluster":{"id":"clusters/lin-cluster","title":"LIN Cluster Configuration: ECU Connector, Frame Triggering, & Schedule Tables","description":"Configure LIN clusters in AUTOSAR ARXML with EEA COM. Define LIN nodes, set ECU connectors, manage frame triggering, and schedule tables for optimized LIN communication.","sidebar":"tutorialSidebar"},"data-types/application-data-type":{"id":"data-types/application-data-type","title":"Configuring Application Data Type (Array): AUTOSAR Arrays in EEA COM","description":"Configure Application Data Types (Array) in EEA COM for AUTOSAR systems. Define fixed or variable array sizes, set dimensions, and manage ECU data with flexible array structures.","sidebar":"tutorialSidebar"},"data-types/application-data-type-basic":{"id":"data-types/application-data-type-basic","title":"Defining Basic Application Data Types in EEA COM","description":"Define basic application data types like VALUE, BOOLEAN, and STRING in EEA COM. Create and manage essential data structures for efficient ECU configurations.","sidebar":"tutorialSidebar"},"data-types/application-data-type-structure":{"id":"data-types/application-data-type-structure","title":"Creating Structure Application Data Types in EEA COM","description":"Create structured application data types in EEA COM by adding elements with VALUE, BOOLEAN, STRING, ARRAY, and STRUCTURE types to define complex data structures for ECU configurations.","sidebar":"tutorialSidebar"},"data-types/base-type":{"id":"data-types/base-type","title":"Defining Base Types: Categories, Encoding & Memory Alignment in EEA COM","description":"Define base types in EEA COM, setting categories, encoding, and memory alignment. Configure byte order and native declarations for precise ECU data structure control.","sidebar":"tutorialSidebar"},"data-types/compute-method":{"id":"data-types/compute-method","title":"Configuring Compute Methods: Linear, State Encoded & Scale-Linear in EEA COM","description":"Configure compute methods in EEA COM to transform raw ECU data into physical values. Use methods like Identical, Linear, State Encoded, and Scale Linear for customized data conversion.","sidebar":"tutorialSidebar"},"data-types/data-constraints":{"id":"data-types/data-constraints","title":"Configuring Data Constraints: AUTOSAR Data Setup in EEA COM","description":"Configure data constraints in EEA COM for AUTOSAR systems. Set physical and internal limits to ensure data integrity and optimize ECU communication performance.","sidebar":"tutorialSidebar"},"data-types/data-types":{"id":"data-types/data-types","title":"Managing Data Types: AUTOSAR Data Type Configuration in EEA COM","description":"Manage and configure data types in EEA COM for AUTOSAR systems. Create, edit, and customize data types to optimize ECU communication and system performance.","sidebar":"tutorialSidebar"},"data-types/implementation-data-types":{"id":"data-types/implementation-data-types","title":"Creating and Defining Implementation Data Types in EEA COM","description":"Define Implementation Data Types in EEA COM. Choose from types like Value, Array, and Structure, referencing Base Types and applying Compute Methods for refined ECU data handling.","sidebar":"tutorialSidebar"},"ecu":{"id":"ecu","title":"ECU Configuration in AUTOSAR: Diagnostic Address, Sleep Mode, & Frame Details","description":"Configure ECU settings in AUTOSAR ARXML with EEA COM. Define short name, diagnostic address, sleep mode, wake-up capabilities, and manage CAN, LIN, FlexRay frame details, PDU, and signal parameters.","sidebar":"tutorialSidebar"},"frames/can-frames":{"id":"frames/can-frames","title":"CAN Frame Configuration: PDU & Signal Management in AUTOSAR","description":"Configure CAN frames in AUTOSAR ARXML with EEA COM. Add frames, create PDUs, and manage signal attributes like type, transfer property, and byte order for efficient communication.","sidebar":"tutorialSidebar"},"frames/ethernet-frames":{"id":"frames/ethernet-frames","title":"Ethernet Frame Configuration: PDU & Data Structure Management","description":"Configure Ethernet frames in AUTOSAR ARXML by managing frame names, lengths, PDUs, and byte orders. Understand Ethernet frame structures, including headers, data, and FCS for effective network communication.","sidebar":"tutorialSidebar"},"frames/flexray-frames":{"id":"frames/flexray-frames","title":"FlexRay Frame Configuration: PDU & Data Management in AUTOSAR","description":"Configure FlexRay frames in AUTOSAR ARXML for high data rates and fault tolerance. Manage frame names, lengths, PDUs, byte orders, and indication positions for efficient time and event-triggered communication.","sidebar":"tutorialSidebar"},"frames/frames":{"id":"frames/frames","title":"Frame Management in AUTOSAR ARXML - CAN, LIN, FlexRay, and Ethernet Frames","description":"Manage CAN, LIN, FlexRay, and Ethernet frames in AUTOSAR ARXML. Add, delete, and save frames using the Frame Tab for proper communication across multiple protocols.","sidebar":"tutorialSidebar"},"frames/lin-event-triggered-frames":{"id":"frames/lin-event-triggered-frames","title":"LIN Event-Triggered Frame Configuration: Efficient Data Handling","description":"Configure LIN event-triggered frames in AUTOSAR ARXML to optimize communication from multiple slave nodes. Manage frame names, lengths, and data updates while handling potential collisions.","sidebar":"tutorialSidebar"},"frames/lin-sporadic-frames":{"id":"frames/lin-sporadic-frames","title":"LIN Sporadic Frame Configuration: Dynamic Behavior & Signal Management","description":"Configure LIN sporadic frames in AUTOSAR ARXML with dynamic behavior. Add frames, manage IDs, and ensure accurate signal transmission for efficient LIN communication.","sidebar":"tutorialSidebar"},"frames/lin-unconditional-frames":{"id":"frames/lin-unconditional-frames","title":"LIN Unconditional Frame Configuration: PDU & Signal Management","description":"Configure LIN unconditional frames in AUTOSAR ARXML for standard communication. Manage frame names, lengths, PDUs, and bit positions for efficient data handling between master and slave nodes.","sidebar":"tutorialSidebar"},"gateway":{"id":"gateway","title":"Gateway Configuration in AUTOSAR","description":"Discover how to configure gateways in AUTOSAR for communication between multiple Communication Clusters. Learn to add gateways, set PDU mappings, and manage configurations for optimal data transfer between source and target channels.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"EEA COM Documentation: AUTOSAR ECU Communication Guide","description":"Explore the EEA COM documentation, your guide to designing AUTOSAR ECU communication matrices. Learn about clusters, PDUs, signals, data types, methods, and more to optimize ECU communication.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"EEA COM Expert: Comprehensive Tool for Editing and Creating AUTOSAR ARXML Files","description":"Enhance your communication networks with EEA COM Expert, a tool for editing AUTOSAR ARXML files, supporting CAN, LIN, and Ethernet for legacy database migration.","sidebar":"tutorialSidebar"},"methods-and-events":{"id":"methods-and-events","title":"Managing Methods and Events in EEA COM","description":"Manage methods and events in EEA COM. Add methods with operations and arguments, define events for AUTOSAR components, and select data types like Implementation, Basic, Array, and Structure for ECU behavior configuration.","sidebar":"tutorialSidebar"},"pdus/container-pdus":{"id":"pdus/container-pdus","title":"Container PDU Configuration: Metadata & Trigger Management in AUTOSAR","description":"Configure Container PDUs in AUTOSAR ARXML by defining parameters like names, lengths, metadata, and timeouts. Manage triggers and ECUs for optimal communication and use collection semantics for efficient data handling.","sidebar":"tutorialSidebar"},"pdus/dcm-pdus":{"id":"pdus/dcm-pdus","title":"DCM PDU Configuration: Diagnostic Request & Response Management","description":"Configure DCM PDUs in AUTOSAR ARXML by defining names, lengths, and types (DIAGREQUEST and DIAGRESPONSE) to streamline automotive diagnostics and manage requests and responses effectively.","sidebar":"tutorialSidebar"},"pdus/general-purpose-pdus":{"id":"pdus/general-purpose-pdus","title":"General Purpose PDU Configuration: Simple Data Management in AUTOSAR","description":"Easily configure General Purpose PDUs in AUTOSAR ARXML by specifying byte lengths. Streamline data management for various communication needs within your automotive system.","sidebar":"tutorialSidebar"},"pdus/j1939-dcm-pdus":{"id":"pdus/j1939-dcm-pdus","title":"J1939 DCM PDU Configuration: Diagnostic Message Management in AUTOSAR","description":"Configure J1939 DCM PDUs in AUTOSAR ARXML by specifying byte lengths and selecting diagnostic message types for effective communication in heavy-duty vehicle diagnostics.","sidebar":"tutorialSidebar"},"pdus/multiplexed-pdus":{"id":"pdus/multiplexed-pdus","title":"Multiplexed PDU Configuration: Advanced Data Handling in AUTOSAR","description":"Configure multiplexed PDUs in AUTOSAR ARXML by defining names, lengths, and selector fields. Manage trigger modes, dynamic/static parts, and set byte orders for effective communication in automotive networks.","sidebar":"tutorialSidebar"},"pdus/n-pdus":{"id":"pdus/n-pdus","title":"N PDU Configuration: Layered Communication Management in AUTOSAR","description":"Configure N PDUs in AUTOSAR ARXML between PDUR and Communication Drivers. Define names and lengths to enhance communication management and streamline data flow for optimized performance.","sidebar":"tutorialSidebar"},"pdus/nm-pdus":{"id":"pdus/nm-pdus","title":"NM PDU Configuration: Network Management Data Handling in AUTOSAR","description":"Configure NM PDUs in AUTOSAR ARXML by defining names, lengths, NM data, and vote information. Enhance signal management and ensure effective communication in automotive network management.","sidebar":"tutorialSidebar"},"pdus/pdus":{"id":"pdus/pdus","title":"PDU Management in AUTOSAR: Packing Signals & Unique Identifiers","description":"Manage PDUs in AUTOSAR ARXML with EEA COM. Explore PDU roles in signal transmission, unique identifiers, and efficiently handle data by copying, pasting, and duplicating signals.","sidebar":"tutorialSidebar"},"pdus/secure-communication-props-set":{"id":"pdus/secure-communication-props-set","title":"Secure Communication Properties: Enhanced Data Security in AUTOSAR","description":"Configure secure communication properties in AUTOSAR ARXML by defining authentication and freshness parameters. Set up customizable security protocols for robust cryptographic communication and data integrity in automotive systems.","sidebar":"tutorialSidebar"},"pdus/secured-pdus":{"id":"pdus/secured-pdus","title":"Secured PDU Configuration: Enhanced Communication Security in AUTOSAR","description":"Configure secured PDUs in AUTOSAR ARXML by defining names, lengths, and metadata. Specify cryptographic properties and manage payload and freshness for secure communication in automotive networks.","sidebar":"tutorialSidebar"},"pdus/signal-pdus":{"id":"pdus/signal-pdus","title":"Signal & PDU Configuration: Creation & Management in AUTOSAR","description":"Create and manage signals and PDUs in AUTOSAR ARXML. Define names, lengths, and delays, and manage signal properties like base types, data constraints, and transformations for effective communication.","sidebar":"tutorialSidebar"},"pdus/user-defined-pdus":{"id":"pdus/user-defined-pdus","title":"User-Defined PDU Configuration: Custom Data Management in AUTOSAR","description":"Configure user-defined PDUs in AUTOSAR ARXML by specifying names and lengths. Tailor your communication structure for efficient and flexible data management in automotive systems.","sidebar":"tutorialSidebar"},"pdus/xcp-pdus":{"id":"pdus/xcp-pdus","title":"XCP PDU Configuration: Efficient Measurement & Calibration in AUTOSAR","description":"Configure XCP PDUs in AUTOSAR ARXML to support efficient measurement and calibration. Define names and lengths to streamline data exchange between ECUs and calibration tools for real-time performance evaluation.","sidebar":"tutorialSidebar"},"signal/signal":{"id":"signal/signal","title":"Signal & Signal Group Configuration: AUTOSAR Signal Management in EEA COM","description":"Manage signals and signal groups in EEA COM for AUTOSAR systems. Configure individual signals or group them for efficient communication, ensuring streamlined data transmission with customizable attributes.","sidebar":"tutorialSidebar"},"signal/signals":{"id":"signal/signals","title":"Creating & Managing Signals: AUTOSAR Signal Configuration in EEA COM","description":"Create and manage signals in EEA COM for AUTOSAR systems. Configure I Signals with parameters like name, length, units, and data types to ensure accurate data transmission.","sidebar":"tutorialSidebar"},"signal/signals-group":{"id":"signal/signals-group","title":"Signal Group Management: AUTOSAR Group Signal Configuration in EEA COM","description":"Configure signal groups in EEA COM for AUTOSAR systems. Group I Signals for efficient transmission and manage ISignalGroups to streamline communication in ECU networks.","sidebar":"tutorialSidebar"},"software-components/application-sw-component-type":{"id":"software-components/application-sw-component-type","title":"Application Software Component Type in AUTOSAR","description":"Explore the Application Software Component Type in AUTOSAR, defining atomic components for specific applications. Configure provided and required ports, ensuring efficient communication and functionality in your ECU environment.","sidebar":"tutorialSidebar"},"software-components/composition-sw-component-type":{"id":"software-components/composition-sw-component-type","title":"Composition Software Component Type in AUTOSAR","description":"Learn about the Composition Software Component Type in AUTOSAR, which aggregates component prototypes. Configure component counts, assembly connectors, and port relationships to enhance modularity in your automotive software architecture.","sidebar":"tutorialSidebar"},"software-components/data-transformation-set":{"id":"software-components/data-transformation-set","title":"Data Transformation Set in AUTOSAR","description":"Learn about the Data Transformation Set in AUTOSAR, enabling efficient data handling with technologies like SOMEIP and ENDTOEND. Configure transformation parameters to enhance data communication in automotive systems.","sidebar":"tutorialSidebar"},"software-components/software-components":{"id":"software-components/software-components","title":"Understanding AUTOSAR Software Components","description":"Explore AUTOSAR software components, the building blocks of AUTOSAR architecture. Learn how they encapsulate algorithms and communicate via well-defined ports for efficient ECU configuration and software development.","sidebar":"tutorialSidebar"},"software-components/system":{"id":"software-components/system","title":"System Configuration in AUTOSAR","description":"Explore how to configure systems in AUTOSAR by adding categories like SYSTEM_CONSTRAINTS and SYSTEM_DESCRIPTION. Define root compositions and map SWCs to ECUs, enhancing your understanding of system architecture in AUTOSAR.","sidebar":"tutorialSidebar"},"switches":{"id":"switches","title":"Switch Configuration in AUTOSAR","description":"Learn to configure switches in AUTOSAR using Coupling Elements that connect ECU Instances to Ethernet Channels (VLANs). Define switch types, configure Coupling Ports, and manage VLAN memberships for optimal communication in Ethernet Clusters.","sidebar":"tutorialSidebar"}}}}')}}]);