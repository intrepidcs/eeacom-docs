"use strict";(self.webpackChunkeeacom_docs=self.webpackChunkeeacom_docs||[]).push([[1567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/","docId":"getting-started","unlisted":false},{"type":"link","label":"Introduction","href":"/intro","docId":"intro","unlisted":false},{"type":"category","label":"Clusters","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CAN/CAN FD Cluster","href":"/clusters/can-cluster","docId":"clusters/can-cluster","unlisted":false},{"type":"link","label":"Ethernet Cluster","href":"/clusters/ethernet-cluster","docId":"clusters/ethernet-cluster","unlisted":false},{"type":"link","label":"LIN Cluster","href":"/clusters/lin-cluster","docId":"clusters/lin-cluster","unlisted":false},{"type":"link","label":"FlexRay Cluster","href":"/clusters/flexray-cluster","docId":"clusters/flexray-cluster","unlisted":false},{"type":"link","label":"J1939 Cluster","href":"/clusters/j1939-cluster","docId":"clusters/j1939-cluster","unlisted":false}],"href":"/clusters/"},{"type":"link","label":"ECU","href":"/ecu","docId":"ecu","unlisted":false},{"type":"category","label":"Frames","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CAN Frames","href":"/frames/can-frames","docId":"frames/can-frames","unlisted":false},{"type":"link","label":"LIN Sporadic Frames","href":"/frames/lin-sporadic-frames","docId":"frames/lin-sporadic-frames","unlisted":false},{"type":"link","label":"LIN Unconditional Frames","href":"/frames/lin-unconditional-frames","docId":"frames/lin-unconditional-frames","unlisted":false},{"type":"link","label":"LIN Event Triggered Frames","href":"/frames/lin-event-triggered-frames","docId":"frames/lin-event-triggered-frames","unlisted":false},{"type":"link","label":"FlexRay Frames","href":"/frames/flexray-frames","docId":"frames/flexray-frames","unlisted":false},{"type":"link","label":"Ethernet Frames","href":"/frames/ethernet-frames","docId":"frames/ethernet-frames","unlisted":false}],"href":"/frames/"},{"type":"category","label":"PDUs (Protocol Data Units)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Signal I PDUs","href":"/pdus/signal-pdus","docId":"pdus/signal-pdus","unlisted":false},{"type":"link","label":"DCM I PDUs","href":"/pdus/dcm-pdus","docId":"pdus/dcm-pdus","unlisted":false},{"type":"link","label":"Container I PDUs","href":"/pdus/container-pdus","docId":"pdus/container-pdus","unlisted":false},{"type":"link","label":"General Purpose PDUs","href":"/pdus/general-purpose-pdus","docId":"pdus/general-purpose-pdus","unlisted":false},{"type":"link","label":"J1939 DCM I PDUs","href":"/pdus/j1939-dcm-pdus","docId":"pdus/j1939-dcm-pdus","unlisted":false},{"type":"link","label":"Multiplexed I PDUs","href":"/pdus/multiplexed-pdus","docId":"pdus/multiplexed-pdus","unlisted":false},{"type":"link","label":"NM PDUs","href":"/pdus/nm-pdus","docId":"pdus/nm-pdus","unlisted":false},{"type":"link","label":"N PDUs","href":"/pdus/n-pdus","docId":"pdus/n-pdus","unlisted":false},{"type":"link","label":"Secured I PDUs","href":"/pdus/secured-pdus","docId":"pdus/secured-pdus","unlisted":false},{"type":"link","label":"User Defined PDUs","href":"/pdus/user-defined-pdus","docId":"pdus/user-defined-pdus","unlisted":false},{"type":"link","label":"XCP PDUs","href":"/pdus/xcp-pdus","docId":"pdus/xcp-pdus","unlisted":false},{"type":"link","label":"Secure Communication Props Set","href":"/pdus/secure-communication-props-set","docId":"pdus/secure-communication-props-set","unlisted":false}],"href":"/pdus/"},{"type":"category","label":"Signals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"I Signals","href":"/signal/signals","docId":"signal/signals","unlisted":false},{"type":"link","label":"I  Signals Group","href":"/signal/signals-group","docId":"signal/signals-group","unlisted":false}],"href":"/signal/"},{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Constraints","href":"/data-types/data-constraints","docId":"data-types/data-constraints","unlisted":false},{"type":"link","label":"Application Data Type (Array)","href":"/data-types/application-data-type","docId":"data-types/application-data-type","unlisted":false},{"type":"link","label":"Compute Method","href":"/data-types/compute-method","docId":"data-types/compute-method","unlisted":false},{"type":"link","label":"Base Type","href":"/data-types/base-type","docId":"data-types/base-type","unlisted":false},{"type":"link","label":"Implementation Data Type","href":"/data-types/implementation-data-types","docId":"data-types/implementation-data-types","unlisted":false},{"type":"link","label":"Application Data Type (Basic)","href":"/data-types/application-data-type-basic","docId":"data-types/application-data-type-basic","unlisted":false},{"type":"link","label":"Application Data Type (Structure)","href":"/data-types/application-data-type-structure","docId":"data-types/application-data-type-structure","unlisted":false}],"href":"/data-types/"},{"type":"link","label":"Methods and Events","href":"/methods-and-events","docId":"methods-and-events","unlisted":false},{"type":"category","label":"Software Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Transformation Set","href":"/software-components/data-transformation-set","docId":"software-components/data-transformation-set","unlisted":false},{"type":"link","label":"Application SW Component Type","href":"/software-components/application-sw-component-type","docId":"software-components/application-sw-component-type","unlisted":false},{"type":"link","label":"Composition SW Component Type","href":"/software-components/composition-sw-component-type","docId":"software-components/composition-sw-component-type","unlisted":false},{"type":"link","label":"System","href":"/software-components/system","docId":"software-components/system","unlisted":false}],"href":"/software-components/"},{"type":"link","label":"Switches","href":"/switches","docId":"switches","unlisted":false},{"type":"link","label":"Gateway","href":"/gateway","docId":"gateway","unlisted":false}]},"docs":{"clusters/can-cluster":{"id":"clusters/can-cluster","title":"CAN/CAN FD Cluster Management: ECU Connectors & Frame Triggering","description":"Learn how to manage CAN/CAN FD Cluster information in AUTOSAR ARXML files using EEA COM. Add, edit, and delete clusters, configure ECU connectors, set frame triggering, and manage CAN frame identifiers with ease.","sidebar":"tutorialSidebar"},"clusters/clusters":{"id":"clusters/clusters","title":"EEEA COM Expert: Managing CAN, Ethernet, LIN, FlexRay, J1939 Clusters","description":"Explore EEA COM Expert\'s cluster management for CAN, Ethernet, LIN, FlexRay, and J1939. Ideal for automotive engineers designing AUTOSAR communication systems.","sidebar":"tutorialSidebar"},"clusters/ethernet-cluster":{"id":"clusters/ethernet-cluster","title":"Ethernet Cluster Configuration: VLANs, MAC Multicast, SOME/IP in AUTOSAR","description":"Configure Ethernet clusters in AUTOSAR ARXML with EEA COM. Manage MAC Multicast, VLANs, socket connections, SOME/IP services, ECUs, and PDUs for optimal network performance.","sidebar":"tutorialSidebar"},"clusters/flexray-cluster":{"id":"clusters/flexray-cluster","title":"FlexRay Cluster Configuration: Channels, Frame Triggering, & ECU Connectors","description":"Learn how to configure FlexRay Clusters in AUTOSAR ARXML files using EEA COM. Define FlexRay channels, manage frame triggering, set ECU connectors, and configure communication cycles for efficient FlexRay communication.","sidebar":"tutorialSidebar"},"clusters/j1939-cluster":{"id":"clusters/j1939-cluster","title":"J1939 Cluster Configuration: ECU Connectors & Frame Triggering in AUTOSAR","description":"Configure J1939 Clusters in AUTOSAR ARXML files with EEA COM. Set up ECU connectors, manage CAN frame triggering, and define CAN FD support. Customize key settings like baudrate, addressing mode, and PNC gateway type for optimal heavy-duty vehicle communication.","sidebar":"tutorialSidebar"},"clusters/lin-cluster":{"id":"clusters/lin-cluster","title":"LIN Cluster Configuration: ECU Connector, Frame Triggering, & Schedule Tables","description":"Configure LIN clusters in AUTOSAR ARXML with EEA COM. Define LIN nodes, set ECU connectors, manage frame triggering, and schedule tables for optimized LIN communication.","sidebar":"tutorialSidebar"},"data-types/application-data-type":{"id":"data-types/application-data-type","title":"Configuring Application Data Type (Array) in EEA COM - AUTOSAR Array Data Types","description":"Learn to configure Application Data Types (Array) in EEA COM for AUTOSAR systems. Define array types with fixed or variable sizes, and set dimensions. Manage ECU data with custom arrays based on primitive or defined data types. Optimize communication and processing with flexible array structures.","sidebar":"tutorialSidebar"},"data-types/application-data-type-basic":{"id":"data-types/application-data-type-basic","title":"Defining Basic Application Data Types in EEA COM","description":"Discover how to define basic application data types such as VALUE, BOOLEAN, and STRING in EEA COM. Learn to create and manage essential data structures for efficient ECU configurations.","sidebar":"tutorialSidebar"},"data-types/application-data-type-structure":{"id":"data-types/application-data-type-structure","title":"Creating Structure Application Data Types in EEA COM","description":"Learn how to create structured application data types in EEA COM. Add multiple elements using VALUE, BOOLEAN, STRING, ARRAY, and STRUCTURE data types to define complex data structures for ECU configurations.","sidebar":"tutorialSidebar"},"data-types/base-type":{"id":"data-types/base-type","title":"Defining Base Types in EEA COM: Categories, Encoding, and Memory Alignment","description":"Discover how to define base types in EEA COM, including options for category, base type encoding, and memory alignment. Learn about byte order configurations and native declaration types for enhanced control over ECU data structures.","sidebar":"tutorialSidebar"},"data-types/compute-method":{"id":"data-types/compute-method","title":"Configuring Compute Methods in EEA COM - Linear, State Encoded & Scale-Linear Transformations","description":"Learn to configure compute methods in EEA COM for transforming raw ECU data into physical values. Explore types like Identical, Linear, State Encoded, Scale Linear, and Bit Field State Encode. Customize the conversion process to improve ECU communication and processing.","sidebar":"tutorialSidebar"},"data-types/data-constraints":{"id":"data-types/data-constraints","title":"Configuring Data Constraints in EEA COM - AUTOSAR Data Constraints Setup","description":"Configure data constraints in EEA COM for AUTOSAR systems. Define physical and internal constraints for data types, including upper and lower limits and validity parameters. Efficiently manage data integrity and system constraints to optimize ECU communication and performance.","sidebar":"tutorialSidebar"},"data-types/data-types":{"id":"data-types/data-types","title":"Managing Data Types in EEA COM - AUTOSAR Data Type Configuration","description":"Manage and configure data types in EEA COM software for AUTOSAR systems. Create and edit various data types to suit your ECU communication needs. View detailed information for each data type by selecting the specific type, allowing efficient customization and system optimization.","sidebar":"tutorialSidebar"},"data-types/implementation-data-types":{"id":"data-types/implementation-data-types","title":"Creating and Defining Implementation Data Types in EEA COM","description":"Learn how to define Implementation Data Types in EEA COM. Explore options for different types such as Value, Array, and Structure. Understand how to reference Base Types, apply Compute Methods, and use Data Constraints to refine data handling for ECU configurations.","sidebar":"tutorialSidebar"},"ecu":{"id":"ecu","title":"ECU Configuration in AUTOSAR: Diagnostic Address, Sleep Mode, & Frame Details","description":"Configure ECU settings in AUTOSAR ARXML with EEA COM. Define short name, diagnostic address, sleep mode, wake-up capabilities, and manage CAN, LIN, FlexRay frame details, PDU, and signal parameters.","sidebar":"tutorialSidebar"},"frames/can-frames":{"id":"frames/can-frames","title":"CAN Frame Configuration in AUTOSAR ARXML - PDU and Signal Management","description":"Configure CAN Frames in AUTOSAR ARXML files using EEA COM. Add CAN frames with specific lengths, create PDUs with designated properties, and manage signals by defining their attributes such as type, transfer property, and packing byte order. Ensure accurate data handling for efficient communication.","sidebar":"tutorialSidebar"},"frames/ethernet-frames":{"id":"frames/ethernet-frames","title":"Ethernet Frame Configuration in AUTOSAR ARXML - PDU and Data Structure Management","description":"Configure Ethernet Frames in AUTOSAR ARXML files by defining short names and lengths. Manage PDUs by selecting types, specifying packing byte orders, and updating indication positions. Understand the structure of Ethernet frames, including headers, data, and Frame Check Sequence (FCS), for effective communication in networked environments.","sidebar":"tutorialSidebar"},"frames/flexray-frames":{"id":"frames/flexray-frames","title":"FlexRay Frame Configuration in AUTOSAR ARXML - PDU and Data Management","description":"Configure FlexRay Frames in AUTOSAR ARXML files to leverage high data rates and fault tolerance. Assign short names and lengths to frames, and manage PDUs by selecting types, defining packing byte orders, and updating indication positions for effective communication in time-triggered and event-triggered scenarios.","sidebar":"tutorialSidebar"},"frames/frames":{"id":"frames/frames","title":"Frame Management in AUTOSAR ARXML - CAN, LIN, FlexRay, and Ethernet Frames","description":"Manage different frame types in AUTOSAR ARXML files, including CAN, LIN Sporadic, LIN Unconditional, LIN Event Triggered, FlexRay, and Ethernet frames. Use the Frame Tab to add, delete, and save frames, ensuring proper communication across multiple protocols.","sidebar":"tutorialSidebar"},"frames/lin-event-triggered-frames":{"id":"frames/lin-event-triggered-frames","title":"LIN Event Triggered Frame Configuration in AUTOSAR ARXML - Efficient Data Handling","description":"Configure LIN Event Triggered Frames in AUTOSAR ARXML files to optimize data communication from multiple slave nodes without overloading the bus. Assign short names and lengths to event-triggered frames, select LIN Unconditional frames, and manage data updates efficiently while handling potential collisions.","sidebar":"tutorialSidebar"},"frames/lin-sporadic-frames":{"id":"frames/lin-sporadic-frames","title":"LIN Sporadic Frame Configuration in AUTOSAR ARXML - Dynamic Behavior and Signal Management","description":"Configure LIN Sporadic Frames in AUTOSAR ARXML files to introduce dynamic behavior in your LIN communication. Add frames with specific short names and lengths, and manage frame IDs to ensure proper data handling. Utilize options to add or remove frames while maintaining accurate signal transmission.","sidebar":"tutorialSidebar"},"frames/lin-unconditional-frames":{"id":"frames/lin-unconditional-frames","title":"LIN Unconditional Frame Configuration in AUTOSAR ARXML - PDU and Signal Management","description":"Configure LIN Unconditional Frames in AUTOSAR ARXML files for standard data communication. Assign short names and lengths to frames, and manage PDUs by selecting the appropriate type, packing byte order, and updating indication bit positions. Ensure efficient data handling between master and slave nodes.","sidebar":"tutorialSidebar"},"gateway":{"id":"gateway","title":"Gateway Configuration in AUTOSAR","description":"Discover how to configure gateways in AUTOSAR, which facilitate communication between multiple Communication Clusters through Frame Mapping, IPDU Mapping, and ISignal Mapping functions. Learn the steps to add gateways, set PDU mappings, and manage configurations for optimal data transfer between source and target channels. Enhance your knowledge of communication architectures in the AUTOSAR framework.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"EEA COM Documentation: AUTOSAR ECU Communication Guide","description":"Explore the EEA COM documentation, your guide to designing AUTOSAR ECU communication matrices. Learn about clusters, PDUs, signals, data types, methods, and more to optimize ECU communication.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"EEA COM Expert: Comprehensive Tool for Editing and Creating AUTOSAR ARXML Files","description":"Enhance your communication networks with EEA COM Expert, a tool for editing AUTOSAR ARXML files, supporting CAN, LIN, and Ethernet for legacy database migration.","sidebar":"tutorialSidebar"},"methods-and-events":{"id":"methods-and-events","title":"Managing Methods and Events in EEA COM","description":"Discover how to manage methods and events in EEA COM. Learn to add methods with operations and arguments, and define events that trigger actions within AUTOSAR components. Explore data type selections including Implementation Data Type, Application Data Type Basic, Array, and Structure for comprehensive ECU behavior configuration.","sidebar":"tutorialSidebar"},"pdus/container-pdus":{"id":"pdus/container-pdus","title":"Container PDU Configuration in AUTOSAR ARXML - Management of Metadata and Triggers","description":"Configure Container Protocol Data Units (PDUs) in AUTOSAR ARXML files by defining essential parameters such as short names, lengths, metadata lengths, and container timeouts. Manage triggers, header types, and select appropriate ECUs and PDUs for optimal communication. Utilize collection semantics (LAST BEST and QUEUED) to ensure efficient data handling and processing within your automotive system.","sidebar":"tutorialSidebar"},"pdus/dcm-pdus":{"id":"pdus/dcm-pdus","title":"DCM PDU Configuration in AUTOSAR ARXML - Diagnostic Request and Response Management","description":"Configure Diagnostic Communication Manager (DCM) Protocol Data Units (PDUs) in AUTOSAR ARXML files. Add DCM PDUs by defining short names, lengths, and diagnostic types (DIAGREQUEST and DIAGRESPONSE) to streamline communication in automotive diagnostics. Ensure effective management of diagnostic requests and responses for robust system performance.","sidebar":"tutorialSidebar"},"pdus/general-purpose-pdus":{"id":"pdus/general-purpose-pdus","title":"General Purpose PDU Configuration in AUTOSAR ARXML - Simple Data Management","description":"Easily configure General Purpose Protocol Data Units (PDUs) in AUTOSAR ARXML files by specifying the length in bytes. Streamline your data management processes with straightforward PDU configuration to support various communication requirements within your automotive system.","sidebar":"tutorialSidebar"},"pdus/j1939-dcm-pdus":{"id":"pdus/j1939-dcm-pdus","title":"J1939 DCM PDU Configuration in AUTOSAR ARXML - Diagnostic Message Management","description":"Configure J1939 Diagnostic Communication Manager (DCM) Protocol Data Units (PDUs) in AUTOSAR ARXML files by specifying the length in bytes and selecting the appropriate diagnostic message type. Streamline your automotive diagnostics processes to ensure effective communication and management of diagnostic messages in heavy-duty vehicle applications.","sidebar":"tutorialSidebar"},"pdus/multiplexed-pdus":{"id":"pdus/multiplexed-pdus","title":"Multiplexed PDU Configuration in AUTOSAR ARXML - Advanced Data Handling","description":"Configure Multiplexed Protocol Data Units (PDUs) in AUTOSAR ARXML files with detailed parameters such as short names, lengths, and selector field configurations. Define trigger modes and manage both dynamic and static parts to enhance data handling efficiency. Set segment byte orders and lengths for precise multiplexing, ensuring effective communication across automotive networks.","sidebar":"tutorialSidebar"},"pdus/n-pdus":{"id":"pdus/n-pdus","title":"N PDU Configuration in AUTOSAR ARXML - Layered Communication Management","description":"Configure N Protocol Data Units (PDUs) in AUTOSAR ARXML files, which operate between the PDUR and Communication Drivers layers. Define key parameters such as short names and lengths to facilitate effective communication management within your automotive system architecture. Streamline data flow across layers for optimized performance and reliability.","sidebar":"tutorialSidebar"},"pdus/nm-pdus":{"id":"pdus/nm-pdus","title":"NM PDU Configuration in AUTOSAR ARXML - Network Management Data Handling","description":"Configure Network Management (NM) Protocol Data Units (PDUs) in AUTOSAR ARXML files by defining essential parameters such as short names, lengths, NM data information, and NM vote information. Enhance signal management by creating or selecting signals, specifying types, packing byte orders, and transfer properties. Ensure effective network management communication and data handling in automotive systems.","sidebar":"tutorialSidebar"},"pdus/pdus":{"id":"pdus/pdus","title":"PDU Management in AUTOSAR ARXML - Packing Signals and Unique Identifiers","description":"Manage Protocol Data Units (PDUs) in AUTOSAR ARXML files using EEA COM. Understand the role of PDUs in signal transmission and reception, and explore the unique identifiers associated with each PDU. Utilize the PDUs tab to copy, paste, and create duplicate signals for efficient data handling in your communication architecture.","sidebar":"tutorialSidebar"},"pdus/secure-communication-props-set":{"id":"pdus/secure-communication-props-set","title":"Secure Communication Properties Configuration in AUTOSAR ARXML - Enhanced Data Security","description":"Configure Secure Communication Properties in AUTOSAR ARXML files, defining essential parameters such as authentication and freshness properties. Set up security protocols with customizable authentication algorithms and freshness counters to ensure robust cryptographic communication in automotive systems. Enhance data integrity and protection across secure","sidebar":"tutorialSidebar"},"pdus/secured-pdus":{"id":"pdus/secured-pdus","title":"Secured PDU Configuration in AUTOSAR ARXML - Enhanced Communication Security","description":"Configure Secured Protocol Data Units (PDUs) in AUTOSAR ARXML files, defining parameters such as short names, lengths, and metadata lengths. Specify cryptographic properties, secure communication settings, and authentication algorithms to enhance data security. Manage payload and freshness properties to ensure secure and reliable communication across automotive networks.","sidebar":"tutorialSidebar"},"pdus/signal-pdus":{"id":"pdus/signal-pdus","title":"Signal and PDU Configuration in AUTOSAR ARXML - Steps for Creation and Management","description":"Follow the steps to create Signals and Protocol Data Units (PDUs) in AUTOSAR ARXML files. Add I Signals and PDUs by defining short names, lengths, and minimum delays. Manage signal properties by selecting base types, compute methods, data constraints, implementation data types, and data transformations to ensure effective communication and data handling.","sidebar":"tutorialSidebar"},"pdus/user-defined-pdus":{"id":"pdus/user-defined-pdus","title":"User Defined PDU Configuration in AUTOSAR ARXML - Custom Data Management","description":"Configure User Defined Protocol Data Units (PDUs) in AUTOSAR ARXML files by specifying essential parameters such as short names and lengths. Tailor your communication structure to meet specific application requirements, enabling efficient and flexible data management within automotive systems.","sidebar":"tutorialSidebar"},"pdus/xcp-pdus":{"id":"pdus/xcp-pdus","title":"XCP PDU Configuration in AUTOSAR ARXML - Efficient Measurement & Calibration","description":"Configure XCP Protocol Data Units (PDUs) in AUTOSAR ARXML files to support efficient measurement and calibration in automotive systems. Define key parameters such as short names and lengths to streamline data exchange between ECU and calibration tools, ensuring accurate and real-time performance evaluation.","sidebar":"tutorialSidebar"},"signal/signal":{"id":"signal/signal","title":"Signal and Signal Group Configuration in EEA COM - AUTOSAR Signal Management","description":"Manage signals and signal groups using the Signals tab in EEA COM software for AUTOSAR systems. Configure individual signals or group them for efficient communication and data handling in ECU networks. Ensure streamlined data transmission and reception with customizable signal attributes and grouping options.","sidebar":"tutorialSidebar"},"signal/signals":{"id":"signal/signals","title":"Creating and Managing Signals in EEA COM - AUTOSAR Signal Configuration","description":"Learn how to create and manage signals in the EEA COM software for AUTOSAR systems. Configure I Signals with parameters such as short name, length (bits), units, and data types like Base Type, Compute Method, and Data Transformation. Ensure accurate data transmission by defining the appropriate signal attributes for your system.","sidebar":"tutorialSidebar"},"signal/signals-group":{"id":"signal/signals-group","title":"Signal Group Management in EEA COM - AUTOSAR Group Signal Configuration","description":"Configure Signal Groups in EEA COM software for AUTOSAR systems. Group multiple I Signals to be transmitted simultaneously, ensuring efficient data transmission. Learn how to create, select, and manage ISignalGroups for streamlined communication within ECU networks. Enhance system performance by effectively organizing related signals in groups.","sidebar":"tutorialSidebar"},"software-components/application-sw-component-type":{"id":"software-components/application-sw-component-type","title":"Application Software Component Type in AUTOSAR","description":"Explore the Application Software Component Type in AUTOSAR, which defines atomic software components that implement specific applications. Learn how to configure provided and required ports, including methods and events, ensuring efficient communication and functionality within your ECU environment. Discover the significance of atomic components in automotive software architecture.","sidebar":"tutorialSidebar"},"software-components/composition-sw-component-type":{"id":"software-components/composition-sw-component-type","title":"Composition Software Component Type in AUTOSAR","description":"Learn about the Composition Software Component Type in AUTOSAR, which serves to aggregate software component prototypes without implementing functionality. Discover how to configure the number of components, assembly connectors, and the relationships between provided and required ports, enhancing the modularity and organization of your automotive software architecture.","sidebar":"tutorialSidebar"},"software-components/data-transformation-set":{"id":"software-components/data-transformation-set","title":"Data Transformation Set in AUTOSAR","description":"Learn about the Data Transformation Set in AUTOSAR, which enables efficient data handling through various transformation technologies like SOMEIP and ENDTOEND. Discover how to configure transformation parameters, including header lengths, alignment, and error states, to enhance data communication and management in automotive systems.","sidebar":"tutorialSidebar"},"software-components/software-components":{"id":"software-components/software-components","title":"Understanding AUTOSAR Software Components","description":"Explore AUTOSAR software components, the reusable building blocks of AUTOSAR architecture. Learn how these components encapsulate algorithms and communicate with their environment through well-defined ports, enabling efficient ECU configuration and software development.","sidebar":"tutorialSidebar"},"software-components/system":{"id":"software-components/system","title":"System Configuration in AUTOSAR","description":"Explore how to configure systems in AUTOSAR by adding various system categories, including SYSTEM_CONSTRAINTS and SYSTEM_DESCRIPTION. Learn to define root compositions and establish SWC to ECU mappings, connecting application software components to their target ECU configurations. Enhance your understanding of system architecture within the AUTOSAR framework.","sidebar":"tutorialSidebar"},"switches":{"id":"switches","title":"Switch Configuration in AUTOSAR","description":"Learn how to configure switches in AUTOSAR using Coupling Elements that connect ECU Instances through Coupling Ports to Ethernet Physical Channels (VLANs). Discover how to define switch types, configure Coupling Ports, and manage VLAN memberships for optimal communication within an Ethernet Cluster. Enhance your understanding of network architecture in the AUTOSAR framework.","sidebar":"tutorialSidebar"}}}}')}}]);